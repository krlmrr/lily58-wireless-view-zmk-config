/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mtt: mod_tap_with_tap_prefered {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            bindings = <&kp>, <&kp>;
        };

        l_shift_or_caps_word: l_shift_or_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "L_SHIFT_OR_CAPS_WORD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };

        r_shift_or_caps_word: r_shift_or_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "R_SHIFT_OR_CAPS_WORD";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&caps_word>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
            label = "ARROW";
        };

        equals_arrow: equals_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "EQUALS_ARROW";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_win_key {
            bindings = <&kp LEFT_WIN>;
            timeout-ms = <170>;
            key-positions = <53 54>;
            layers = <1>;
        };

        combo_quit {
            bindings = <&kp LA(F4)>;
            timeout-ms = <170>;
            key-positions = <53 13>;
            layers = <1>;
        };

        combo_lock {
            bindings = <&kp LG(L)>;
            key-positions = <53 13 24>;
            timeout-ms = <200>;
            layers = <1>;
        };

        combo_lock_right {
            bindings = <&kp LG(L)>;
            key-positions = <13 24 54>;
            timeout-ms = <200>;
            layers = <1>;
        };

        combo_switch_apps {
            bindings = <&kp LA(TAB)>;
            key-positions = <53 12>;
            timeout-ms = <170>;
            layers = <1>;
            slow-release;
        };

        combo_ctrl_alt_delete {
            bindings = <&kp LA(LC(ESCAPE))>;
            key-positions = <53 50 24>;
            timeout-ms = <200>;
            layers = <1>;
        };

        combo_halt_alt {
            bindings = <&kp LA(LC(ESCAPE))>;
            key-positions = <50 24 54>;
            timeout-ms = <200>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        macOS {
            display-name = "macOS";
            bindings = <
&kp GRAVE              &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                                       &kp N6  &kp N7     &kp N8         &kp N9   &kp N0    &kp MINUS
&kp TAB                &kp Q   &kp W   &kp E     &kp R     &kp T                                                        &kp Y   &kp U      &kp I          &kp O    &kp P     &kp BACKSLASH
&mt LCTRL ESCAPE       &kp A   &kp S   &kp D     &kp F     &kp G                                                        &kp H   &kp J      &kp K          &kp L    &kp SEMI  &kp SQT
&l_shift_or_caps_word  &kp Z   &kp X   &kp C     &kp V     &kp B   &kp ENTER                  &kp BACKSPACE             &kp N   &kp M      &kp COMMA      &kp DOT  &kp FSLH  &r_shift_or_caps_word
                                       &kp LALT  &kp LGUI  &mo 3   &mtt LEFT_COMMAND SPACE    &mtt RIGHT_COMMAND SPACE  &mo 2   &kp ENTER  &kp RIGHT_ALT
            >;
        };

        Win-Lin {
            display-name = "Win/Lin";
            bindings = <
&trans  &trans  &trans  &trans  &trans        &trans                                        &trans  &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans                                        &trans  &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans                                        &trans  &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans  &trans              &trans            &trans  &trans         &trans  &trans  &trans  &trans
                        &trans  &kp LEFT_GUI  &trans  &mtt LCTRL SPACE    &mtt RCTRL SPACE  &trans  &kp RIGHT_GUI  &trans
            >;
        };

        Symbols-Arrows {
            display-name = "Symbol";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH              &kp DOLLAR             &kp PERCENT                         &kp CARET       &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RS(MINUS)
&trans     &kp HASH         &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE                            &kp EQUAL       &arrow         &equals_arrow      &none                 &none                  &kp RS(NON_US_BACKSLASH)
&trans     &kp EXCLAMATION  &kp DOLLAR     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION                        &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW       &kp RIGHT             &kp RS(SEMICOLON)      &kp RS(SINGLE_QUOTE)
&trans     &kp PERCENT      &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp ASTERISK  &trans    &kp DELETE  &none           &kp K_MUTE     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP       &kp RS(SLASH)          &trans
                                           &trans                &trans                 &trans        &trans    &trans      &trans          &trans         &trans
            >;
        };

        Function {
            display-name = "Func";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &tog 1  &none   &none   &none    &none    &none
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none       &none         &none         &none         &none         &none                           &none   &none   &none   &none    &none    &none
&none       &none         &none         &none         &none         &none         &none     &none   &none   &none   &none   &none    &none    &none
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
